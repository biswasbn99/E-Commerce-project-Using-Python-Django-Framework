# Generated by Django 5.2.5 on 2025-09-24 06:10

from django.db import migrations


def migrate_product_categories(apps, schema_editor):
    Product = apps.get_model('homepage', 'Product')
    Category = apps.get_model('homepage', 'Category')
    
    # Map old category choices to new Category objects
    for product in Product.objects.all():
        if product.category and not product.category_new:
            try:
                # Find matching category by name
                category_obj = Category.objects.get(name=product.category)
                product.category_new = category_obj
                product.save()
            except Category.DoesNotExist:
                # If category doesn't exist, create it
                category_obj = Category.objects.create(
                    name=product.category,
                    description=f"Auto-created from product: {product.name}",
                    is_active=True
                )
                product.category_new = category_obj
                product.save()


def reverse_migration(apps, schema_editor):
    Product = apps.get_model('homepage', 'Product')
    
    # Set category field back from category_new
    for product in Product.objects.all():
        if product.category_new:
            product.category = product.category_new.name
            product.save()


class Migration(migrations.Migration):

    dependencies = [
        ('homepage', '0004_create_default_categories'),
    ]

    operations = [
        migrations.RunPython(migrate_product_categories, reverse_migration),
    ]